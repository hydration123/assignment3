# -*- coding: UTF-8 -*-#-----------------------------------------------------------------------------# Python source generated by wxDesigner from file: EECE412_Ass3_VPN.wdr# Do not modify this file, all changes will be lost!#-----------------------------------------------------------------------------# Include wxPython modulesimport wximport wx.gridimport wx.animate# Window functionsID_TEXT_MODE  = 10000ID_CHOICE_MODE = 10001ID_TEXT_REMOTE_SERVER_IP = 10002ID_TEXTCTRL_LOCAL_PORT = 10003ID_TEXTCTRL_REMOTE_SERVER_IP = 10004ID_TEXTCTRL_REMOTE_SERVER_PORT = 10005ID_TEXT = 10006ID_TEXTCTRL_SHARED_KEY = 10007ID_TEXTCTRL_DATA = 10008ID_LINE = 10009ID_TEXTCTRL_CONSOLE = 10010ID_BUTTON_CONNECT = 10011ID_BUTTON_STEP = 10012ID_BUTTON_SEND = 10013def MainSizer( parent, call_fit = True, set_sizer = True ):    item0 = wx.BoxSizer( wx.HORIZONTAL )        item1 = wx.BoxSizer( wx.VERTICAL )        item2 = wx.BoxSizer( wx.HORIZONTAL )        item3 = wx.StaticText( parent, ID_TEXT_MODE , "Mode", wx.DefaultPosition, wx.DefaultSize, 0 )    item2.Add( item3, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item4 = wx.Choice( parent, ID_CHOICE_MODE, wx.DefaultPosition, [100,-1],         ["Server","Client"] , 0 )    item2.Add( item4, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item1.Add( item2, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item5 = wx.GridSizer( 0, 2, 0, 0 )        item6 = wx.StaticText( parent, ID_TEXT_REMOTE_SERVER_IP, "Local port", wx.DefaultPosition, wx.DefaultSize, 0 )    item5.Add( item6, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item7 = wx.TextCtrl( parent, ID_TEXTCTRL_LOCAL_PORT, "", wx.DefaultPosition, [180,25], 0 )    item7.SetFont( wx.Font( 12, wx.MODERN, wx.NORMAL, wx.NORMAL ) )    item7.SetToolTip( wx.ToolTip("Enter local port ") )    item5.Add( item7, 0, wx.ALIGN_CENTER|wx.ALL|wx.SHAPED, 5 )    item1.Add( item5, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item8 = wx.GridSizer( 0, 2, 0, 2 )    parent.sizerRemote = item8        item9 = wx.StaticText( parent, ID_TEXT_REMOTE_SERVER_IP, "Remote Server IP", wx.DefaultPosition, wx.DefaultSize, 0 )    item9.Enable(False)    item8.Add( item9, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item10 = wx.TextCtrl( parent, ID_TEXTCTRL_REMOTE_SERVER_IP, "", wx.DefaultPosition, [180,25], 0 )    item10.SetFont( wx.Font( 12, wx.MODERN, wx.NORMAL, wx.NORMAL ) )    item10.SetToolTip( wx.ToolTip("When in client mode, enter remote server IP address") )    item10.Enable(False)    item8.Add( item10, 0, wx.ALIGN_CENTER|wx.ALL|wx.SHAPED, 5 )    item11 = wx.StaticText( parent, ID_TEXT_REMOTE_SERVER_IP, "Remote Server port", wx.DefaultPosition, wx.DefaultSize, 0 )    item11.Enable(False)    item8.Add( item11, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item12 = wx.TextCtrl( parent, ID_TEXTCTRL_REMOTE_SERVER_PORT, "", wx.DefaultPosition, [180,25], 0 )    item12.SetFont( wx.Font( 12, wx.MODERN, wx.NORMAL, wx.NORMAL ) )    item12.SetToolTip( wx.ToolTip("When in client mode, enter remote server port ") )    item12.Enable(False)    item8.Add( item12, 0, wx.ALIGN_CENTER|wx.ALL|wx.SHAPED, 5 )    item1.Add( item8, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item13 = wx.FlexGridSizer( 0, 2, 0, 0 )        item14 = wx.StaticText( parent, ID_TEXT, "Shared Key", wx.DefaultPosition, wx.DefaultSize, 0 )    item13.Add( item14, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item15 = wx.TextCtrl( parent, ID_TEXTCTRL_SHARED_KEY, "", wx.DefaultPosition, [400,100], wx.TE_MULTILINE|wx.VSCROLL )    item15.SetToolTip( wx.ToolTip("Enter symmetric key that was previously shared between local and remote host.  This key is used to establish a symmetric session key.") )    item13.Add( item15, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item16 = wx.StaticText( parent, ID_TEXT, "SEND/RECV", wx.DefaultPosition, wx.DefaultSize, 0 )    item13.Add( item16, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item17 = wx.TextCtrl( parent, ID_TEXTCTRL_DATA, "", wx.DefaultPosition, [400,150], wx.TE_MULTILINE|wx.VSCROLL )    item17.SetToolTip( wx.ToolTip("When in client mode, plaintext to be encrypted to server.  When in server mode, decrypted ciphertext from client.") )    item13.Add( item17, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item1.Add( item13, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item18 = wx.BoxSizer( wx.HORIZONTAL )        item1.Add( item18, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item0.Add( item1, 0, wx.ALL, 5 )    item19 = wx.StaticLine( parent, ID_LINE, wx.DefaultPosition, [-1,450], wx.LI_VERTICAL )    item0.Add( item19, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item20 = wx.BoxSizer( wx.VERTICAL )        item21 = wx.TextCtrl( parent, ID_TEXTCTRL_CONSOLE, "", wx.DefaultPosition, [800,400], wx.TE_MULTILINE )    item21.SetToolTip( wx.ToolTip("Console log of connection information.") )    item20.Add( item21, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item22 = wx.BoxSizer( wx.HORIZONTAL )        item23 = wx.Button( parent, ID_BUTTON_CONNECT, "Connect", wx.DefaultPosition, wx.DefaultSize, 0 )    item22.Add( item23, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item24 = wx.Button( parent, ID_BUTTON_STEP, "Step", wx.DefaultPosition, wx.DefaultSize, 0 )    item24.Enable(False)    item22.Add( item24, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item25 = wx.Button( parent, ID_BUTTON_SEND, "Send", wx.DefaultPosition, wx.DefaultSize, 0 )    item25.Enable(False)    item22.Add( item25, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item20.Add( item22, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    item0.Add( item20, 0, wx.ALIGN_CENTER|wx.ALL, 5 )    if set_sizer == True:        parent.SetSizer( item0 )        if call_fit == True:            item0.SetSizeHints( parent )        return item0# Menubar functionsID_MENU = 10014def MyMenuBarFunc():    item0 = wx.MenuBar()        item1 = wx.Menu()    item1.Append( wx.ID_ABOUT, "&About", "" )    item1.Append( wx.ID_EXIT, "&Quit", "" )    item0.Append( item1, "&File" )        return item0# Toolbar functionsdef MyToolBarFunc( parent ):    parent.SetMargins( [2,2] )            parent.Realize()# Bitmap functions# End of generated file